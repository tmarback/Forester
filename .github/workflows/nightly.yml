# Workflow for deploying a release to GitHub Packages and OSSRH

name: Nightly

on:
  schedule: # Trigger once a day (nightly builds)
    - cron: '0 0 * * *'

jobs:
  release:
    name: Release Snapshot
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository (Develop)
        uses: actions/checkout@v2
        with:
          ref: 'develop' # Nightly pulls from develop
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-nightly-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-nightly-
            ${{ runner.os }}-maven-deploy-

      - name: Set up Apache Maven Central
        uses: actions/setup-java@v1
        with: # running setup-java again overwrites the settings.xml
          java-version: 11
          server-id: ossrh # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: NEXUS_USERNAME # env variable for username in deploy
          server-password: NEXUS_PASSWORD # env variable for token in deploy
          gpg-private-key: ${{ secrets.gpg_private_key }} # Value of the GPG private key to import
          gpg-passphrase: GPG_PASSPHRASE # env variable for GPG private key passphrase
      - name: Build and test with Maven
        run: mvn clean verify -B -P deploy
        env:
          GPG_PASSPHRASE: ${{ secrets.gpg_passphrase }}
      - name: Publish to OSSRH
        run: mvn deploy -B -P deploy,ossrh -Dmaven.test.skip=true
        env:
          NEXUS_USERNAME: ${{ secrets.nexus_username }}
          NEXUS_PASSWORD: ${{ secrets.nexus_password }}
          GPG_PASSPHRASE: ${{ secrets.gpg_passphrase }}

      - name: Set up for Github Packages
        uses: actions/setup-java@v1
        with:
          java-version: 11
          gpg-passphrase: GPG_PASSPHRASE # env variable for GPG private key passphrase
      - name: Publish to GitHub Packages
        run: mvn deploy -B -P deploy,github -Dmaven.test.skip=true
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ github.token }} 
          GPG_PASSPHRASE: ${{ secrets.gpg_passphrase }}